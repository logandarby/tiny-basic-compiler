#!/bin/bash

# Pre-commit hook for tiny-basic-compiler
# This hook will:
# 1. Check that the code compiles
# 2. Run clang-format check (if available)
# 3. Check for common issues

set -e

echo "🔍 Running pre-commit checks..."

# Change to project root
cd "$(git rev-parse --show-toplevel)"

# Check if we have any C files staged
staged_c_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(c|h)$' || true)

if [ -z "$staged_c_files" ]; then
    echo "✅ No C files staged, skipping checks"
    exit 0
fi

echo "📁 Staged C files: $staged_c_files"

# Check if clang-format is available and run formatting check
if command -v clang-format >/dev/null 2>&1; then
    echo "🎨 Checking code formatting with clang-format..."
    
    format_issues=false
    for file in $staged_c_files; do
        if [ -f "$file" ]; then
            # Check if file needs formatting
            if ! clang-format --dry-run --Werror "$file" >/dev/null 2>&1; then
                echo "❌ Formatting issues found in: $file"
                echo "💡 Run: clang-format -i $file"
                format_issues=true
            fi
        fi
    done
    
    if [ "$format_issues" = true ]; then
        echo ""
        echo "🔧 To fix formatting issues, run:"
        echo "   clang-format -i $staged_c_files"
        echo ""
        echo "💡 Or to format all C files: find src/ -name '*.c' -o -name '*.h' | xargs clang-format -i"
        exit 1
    fi
    
    echo "✅ Code formatting looks good!"
else
    echo "⚠️  clang-format not found, skipping formatting check"
fi

# Try to build the project
echo "🔨 Building project..."
if ! make clean >/dev/null 2>&1; then
    echo "⚠️  Clean failed, continuing..."
fi

if ! make >/dev/null 2>&1; then
    echo "❌ Build failed! Please fix compilation errors before committing."
    echo ""
    echo "🔍 Run 'make' to see detailed error messages"
    exit 1
fi

echo "✅ Project builds successfully!"

# Basic static analysis checks
echo "🔍 Running basic static checks..."

# Check for common issues in staged files
for file in $staged_c_files; do
    if [ -f "$file" ]; then
        # Check for TODO/FIXME comments (warning, not failure)
        if grep -n "TODO\|FIXME\|XXX" "$file" >/dev/null 2>&1; then
            echo "⚠️  Found TODO/FIXME comments in $file:"
            grep -n "TODO\|FIXME\|XXX" "$file" | head -3
        fi
        
        # Check for debug prints that might be left behind
        if grep -n "printf.*debug\|fprintf.*debug" "$file" >/dev/null 2>&1; then
            echo "⚠️  Possible debug prints found in $file:"
            grep -n "printf.*debug\|fprintf.*debug" "$file"
            echo "💡 Consider removing or using proper logging"
        fi
    fi
done

echo "✅ Pre-commit checks passed!"
echo "" 